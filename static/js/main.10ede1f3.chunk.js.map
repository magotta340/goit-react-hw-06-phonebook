{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","redux/app/app-selectors.js","redux/app/app-actions.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Container/Сontainer.jsx","components/Filter/Filter.jsx","App.jsx","redux/app/app-reducer.js","redux/store.js","index.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","addContact","createAction","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","onSubmit","e","preventDefault","namesIsIn","reduce","acc","contact","numbersIsIn","alert","contactCheck","appActions","className","s","form","label","input","type","value","pattern","title","placeholder","onChange","currentTarget","btn","ContactList","list","map","item","text","onClick","actions","onDeleteContact","Container","children","container","Filter","event","target","App","totalContactsCount","length","createReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.10ede1f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n    const contacts = getContacts(state);\n    const filter = getFilter(state);\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter)\n    )\n}","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nexport const addContact = createAction('app/add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number\n  },\n}));\n\nexport const deleteContact = createAction('app/delete');\n\nexport const changeFilter = createAction('app/changeFilter')","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/app/app-selectors';\nimport * as appActions from '../../redux/app/app-actions';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) =>\n    dispatch(appActions.addContact(name, number));\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactCheck = () => {\n    const namesIsIn = contacts.reduce(\n      (acc, contact) => [...acc, contact.name],\n      [],\n    );\n    const numbersIsIn = contacts.reduce(\n      (acc, contact) => [...acc, contact.number],\n      [],\n    );\n\n    if (namesIsIn.includes(name) || numbersIsIn.includes(number)) {\n      alert(`${name}${number} is already in contacts`);\n    }\n\n    if (name === '' || number === '') {\n      alert('Enter all data, please');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setName('');\n    setNumber('');\n    if (contactCheck()) {\n      return;\n    }\n\n    onSubmit(name, number);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name:\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          placeholder=\"Jack Sparrow\"\n          onChange={e => setName(e.currentTarget.value)}\n        />\n      </label>\n\n      <label className={s.label}>\n        Number:\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          placeholder=\"111-11-11\"\n          onChange={e => setNumber(e.currentTarget.value)}\n        />\n      </label>\n      <button\n        className={s.btn}\n        type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/app/app-actions';\nimport {getVisibleContacts} from '../../redux/app/app-selectors'\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <p className={s.text}>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n            className={s.btn}\n          >\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/app/app-selectors';\nimport * as actions from '../../redux/app/app-actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  const change = event => dispatch(actions.changeFilter(event.target.value));\n\n  return (\n    <label>\n      Find contacts by name:\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={change}\n      />\n    </label>\n  );\n}\n\n\nexport default Filter;","// import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Container from \"./components/Container/Сontainer\";\nimport Filter from \"./components/Filter/Filter\";\nimport { getVisibleContacts } from './redux/app/app-selectors';\n\n// import appActions from \"./redux/app/app-actions\";\nimport { useSelector } from \"react-redux\";\n\nexport default function App() {\n  const contacts = useSelector(getVisibleContacts);\n  const totalContactsCount = contacts.length;\n  \n    return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <p>Общее кол-во: {totalContactsCount}</p>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n// class App extends Component {\n//   filterArr = (fArr) => {\n//     let newArr = fArr.filter((cur) =>\n//       cur.name.toUpperCase().includes(this.props.filter)\n//     );\n//     return newArr;\n//   };\n\n//   render() {\n//     return (\n//       <Container>\n//         <div className=\"App\">\n//           <h1>Phonebook</h1>\n//           <ContactForm onSubmitData={this.props.formSubmitHandler} />\n//           <h1>Contacts</h1>\n//           <Filter setFilterToState={this.props.filterSet} />\n//           <ContactList\n//             contacts={this.filterArr(this.props.contacts)}\n//             del={this.props.contactDelete}\n//           />\n//           </div>\n//       </Container>\n//     );\n//   }\n// }\n// const mapStateToProps = (state) => ({\n//   contacts: state.app.contacts,\n//   filter: state.app.filter,\n// });\n// const mapDispatchToProrps = (dispatch) => ({\n//   formSubmitHandler: (contactData) =>\n//     dispatch(appActions.addContact(contactData)),\n//   contactDelete: (contactId) => dispatch(appActions.deleteContact(contactId)),\n//   filterSet: (str) => dispatch(appActions.filterSet(str)),\n// });\n// export default connect(mapStateToProps, mapDispatchToProrps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, changeFilter } from './app-actions';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst items = createReducer(\n  initialContacts, {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n}\n)\n\nconst filter = createReducer('', {\n  [changeFilter]: (state, { payload }) => payload,\n}\n\n)\n\nexport default combineReducers({\n  items,\n  filter,\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './app/app-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport s from './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App className={s} />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store.store}>\n//       <PersistGate loading={null} persistor={store.persistor}>\n//         <App className={s} />\n//       </PersistGate>\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n"],"sourceRoot":""}